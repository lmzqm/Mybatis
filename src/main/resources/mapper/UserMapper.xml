<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmzqm.mybatis.Mapper.UserMapper">

    <resultMap id="UserInfoResult" type="User">
        <id property="id" column="id"></id>
        <result property="userName" column="username"/>
        <result property="passWord" column="password"/>
        <result property="sex" column="sex"/>
        <result property="nickName" column="nick_name"/>
    </resultMap>

    <select id="getUserById" parameterType="java.lang.Integer" resultMap="UserInfoResult">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <insert id="addUserInfo" parameterType="User">

        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT  INTO  users(username,password,sex,nick_name) VALUES (#{userName},#{passWord},#{sex},#{nickName})
    </insert>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">

        INSERT INTO users(username,password,sex,nick_name) VALUES (#{userName,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{sex},#{nickName})

    </insert>

    <update id="updateUserInfo" parameterType="User">
        UPDATE users
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password= #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="nickname != null">
                nick_name = #{nickname}
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <select id="getUserLike" resultMap="UserInfoResult" parameterType="java.lang.String">
        <bind name="pattern" value="'%'+${name}+'%'"></bind>
        SELECT * FROM users
        <where>
            <if test="username != null">
                <include refid="orderByName">
                    <property name="name" value="username"></property>
                </include>
            </if>
        </where>
    </select>

    <sql id="orderByName">
        username LIKE ${name}
    </sql>

    <sql id="foreatchUsers">
        <foreach collection="items" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </sql>



</mapper>